cmake_minimum_required(VERSION 3.10)
project(cppFlowATR)

include_directories(PRIVATE include e:/Installs/opencv/sources/include e:/Installs/libtensorflow-gpu-windows-x86_64-1.15.0/include )
#find_package( OpenCV REQUIRED )
find_package(OpenCV REQUIRED PATHS e:/Installs/opencv/build/x64/vc14/bin NO_DEFAULT_PATH)

 # For some reason CMake uses its defaults before the above paths.)

FIND_LIBRARY(MY_LIB NAMES tensorflow.lib PATHS e:/Installs/libtensorflow-gpu-windows-x86_64-1.15.0/lib )
set(CMAKE_CXX_STANDARD 17)

add_executable(main_like_coco src/main_like_coco.cpp src/Model.cpp src/Tensor.cpp)
#find_package( OpenCV REQUIRED )
target_include_directories(main_like_coco PRIVATE include)
target_link_libraries (main_like_coco  ${MY_LIB} ${OpenCV_LIBS})

#add_executable(main_ATR src/main_ATR.cpp src/Model.cpp src/Tensor.cpp src/InterfaceATR.cpp src/Object_Detection_API.cpp src/imgUtils.cpp)
#find_package( OpenCV REQUIRED )
#target_include_directories(main_ATR PRIVATE include)
#target_link_libraries (main_ATR ${MY_LIB} ${OpenCV_LIBS})
#target_link_libraries (main_ATR -ltensorflow ${OpenCV_LIBS})

# add_library(mbATR SHARED src/InterfaceATR.cpp)
# #find_package( OpenCV REQUIRED )
# #target_include_directories(mbATR PRIVATE include)
# target_link_libraries (mbATR -ltensorflow ${OpenCV_LIBS})

#TEST
add_executable(testUtils tests/testUtils.cpp src/imgUtils.cpp)
target_link_libraries (testUtils  ${OpenCV_LIBS})

set(SOURCE main.cpp)
add_executable(${PROJECT_NAME} ${SOURCE})